name: Build and Deploy Lambda

on:
  push:
    branches: [ main ]
    paths:
      - "services/**"
      - "Dockerfile"
      - "package-services.json"
      - "infra-terraform/**"
  workflow_dispatch:

permissions:
  contents: read
  id-token: write  # OIDC â†’ AWS
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repo exists
        run: |
          REPO_NAME="db-watcher"
          aws ecr describe-repositories --repository-names $REPO_NAME >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name $REPO_NAME --image-scanning-configuration scanOnPush=true --image-tag-mutability MUTABLE

      - name: Build and push Docker image
        id: build
        run: |
          IMAGE_REPO=${{ steps.login-ecr.outputs.registry }}/db-watcher
          IMAGE_TAG=${{ github.sha }}

          docker build -t $IMAGE_REPO:$IMAGE_TAG -f Dockerfile .
          docker push $IMAGE_REPO:$IMAGE_TAG

          echo "image_uri=$IMAGE_REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Save image_uri for Terraform
        run: echo "IMAGE_URI=${{ steps.build.outputs.image_uri }}" >> $GITHUB_ENV


  validate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1


      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: infra-terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: infra-terraform
        run: terraform validate

  plan:
    runs-on: ubuntu-latest
    needs: validate
    outputs:
      plan_changed: ${{ steps.plan.outputs.has_changes }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Init
        working-directory: infra-terraform
        run: terraform init

      - name: Terraform Plan
        id: plan
        working-directory: infra-terraform
        run: |
          terraform plan \
            -lock-timeout=30s \
            -var="lambda_image_uri=${{ env.IMAGE_URI }}" \
            -var="mongo_uri=${{ secrets.MONGO_URI }}" \
            -var="token_github=${{ secrets.TOKEN_GITHUB }}" \
            -var="gh_project_id=${{ secrets.GH_PROJECT_ID }}" \
            -var="gh_repo_owner=ayuspoudel" \
            -var="gh_repo_name=usf-fall-2025-repo" \
            -var="gh_field_course=${{ secrets.GH_FIELD_COURSE }}" \
            -var="gh_field_due_date=${{ secrets.GH_FIELD_DUE_DATE }}" \
            -var="gh_field_type=${{ secrets.GH_FIELD_TYPE }}" \
            -var="gh_option_assignment=${{ secrets.GH_OPTION_ASSIGNMENT }}" \
            -var="gh_option_exam=${{ secrets.GH_OPTION_EXAM }}" \
            -var="gh_option_project=${{ secrets.GH_OPTION_PROJECT }}" \
            -var="gh_option_quiz=${{ secrets.GH_OPTION_QUIZ }}" \
            -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra-terraform/tfplan

  apply:
    runs-on: ubuntu-latest
    needs: plan
    environment: prod
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
      
      - name: Download plan artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: infra-terraform
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5

      - name: Terraform Apply
        working-directory: infra-terraform
        run: terraform apply -auto-approve tfplan
            